services:
  frontend:
    build: 
      context: ./app/frontend
      args:
        FRONTEND_PORT: ${FRONTEND_PORT:-5173}
    container_name: nest-todo_frontend
    volumes:
      - ./app/frontend:/frontend
      - ./.env:/frontend/.env
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:${FRONTEND_PORT:-5173}"]
      timeout: 10s
      retries: 5
    ports:
      - ${FRONTEND_PORT:-5173}:5173
  
  backend:
    build: 
      context: ./app/backend
      args:
        VITE_BACKEND_PORT: ${VITE_BACKEND_PORT:-3001}
    container_name: nest-todo_backend
    volumes:
      - ./app/backend:/backend
      - ./.env:/backend/.env
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:${VITE_BACKEND_PORT:-3001}"]
      timeout: 10s
      retries: 5
    ports:
      - ${VITE_BACKEND_PORT:-3001}:3001
  db:
    image: postgres
    container_name: nest-todo_db
    volumes:
      - nestjs-db:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "nest-todo_db"]
      interval: 3s
      timeout: 20s
      retries: 5

volumes:
  nestjs-db:
